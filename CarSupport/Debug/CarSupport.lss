
CarSupport.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000670  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005fc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000021  00800100  00800100  00000670  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000670  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000006a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  000006dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000169f  00000000  00000000  000007bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ca3  00000000  00000000  00001e5b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000700  00000000  00000000  00002afe  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000260  00000000  00000000  00003200  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000069e  00000000  00000000  00003460  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000096e  00000000  00000000  00003afe  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  0000446c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__ctors_end>
   4:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   8:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  10:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  14:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  18:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  1c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  20:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  24:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  28:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  2c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  30:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  34:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  38:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  3c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  40:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  44:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  48:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  4c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  50:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  54:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  58:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  5c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  60:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  64:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>

00000068 <__ctors_start>:
  68:	a3 01       	movw	r20, r6

0000006a <__ctors_end>:
  6a:	11 24       	eor	r1, r1
  6c:	1f be       	out	0x3f, r1	; 63
  6e:	cf ef       	ldi	r28, 0xFF	; 255
  70:	d8 e0       	ldi	r29, 0x08	; 8
  72:	de bf       	out	0x3e, r29	; 62
  74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_clear_bss>:
  76:	21 e0       	ldi	r18, 0x01	; 1
  78:	a0 e0       	ldi	r26, 0x00	; 0
  7a:	b1 e0       	ldi	r27, 0x01	; 1
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a1 32       	cpi	r26, 0x21	; 33
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>

00000086 <__do_global_ctors>:
  86:	10 e0       	ldi	r17, 0x00	; 0
  88:	c5 e3       	ldi	r28, 0x35	; 53
  8a:	d0 e0       	ldi	r29, 0x00	; 0
  8c:	04 c0       	rjmp	.+8      	; 0x96 <__do_global_ctors+0x10>
  8e:	21 97       	sbiw	r28, 0x01	; 1
  90:	fe 01       	movw	r30, r28
  92:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__tablejump2__>
  96:	c4 33       	cpi	r28, 0x34	; 52
  98:	d1 07       	cpc	r29, r17
  9a:	c9 f7       	brne	.-14     	; 0x8e <__do_global_ctors+0x8>
  9c:	0e 94 74 01 	call	0x2e8	; 0x2e8 <main>
  a0:	0c 94 fc 02 	jmp	0x5f8	; 0x5f8 <_exit>

000000a4 <__bad_interrupt>:
  a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a8 <_ZN6ButtonC1Ev>:

#include "Button.h"
#include <avr/io.h>

// default constructor
Button::Button(){
  a8:	08 95       	ret

000000aa <_ZN6Button4InitEci>:
	
}

void Button::Init(char port, int pin)
{
  aa:	fc 01       	movw	r30, r24
	_port = port;
  ac:	60 83       	st	Z, r22
	_pin = pin;
  ae:	41 83       	std	Z+1, r20	; 0x01
  b0:	52 83       	std	Z+2, r21	; 0x02
	
	switch (_port){
  b2:	63 34       	cpi	r22, 0x43	; 67
  b4:	a1 f0       	breq	.+40     	; 0xde <_ZN6Button4InitEci+0x34>
  b6:	64 34       	cpi	r22, 0x44	; 68
  b8:	11 f1       	breq	.+68     	; 0xfe <_ZN6Button4InitEci+0x54>
  ba:	62 34       	cpi	r22, 0x42	; 66
  bc:	79 f5       	brne	.+94     	; 0x11c <_ZN6Button4InitEci+0x72>
		case 'B': DDRB &= ~(1<<(pin)); PORTB |= (1<<(pin)); break;
  be:	24 b1       	in	r18, 0x04	; 4
  c0:	81 e0       	ldi	r24, 0x01	; 1
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	02 c0       	rjmp	.+4      	; 0xca <_ZN6Button4InitEci+0x20>
  c6:	88 0f       	add	r24, r24
  c8:	99 1f       	adc	r25, r25
  ca:	4a 95       	dec	r20
  cc:	e2 f7       	brpl	.-8      	; 0xc6 <_ZN6Button4InitEci+0x1c>
  ce:	98 2f       	mov	r25, r24
  d0:	90 95       	com	r25
  d2:	92 23       	and	r25, r18
  d4:	94 b9       	out	0x04, r25	; 4
  d6:	95 b1       	in	r25, 0x05	; 5
  d8:	89 2b       	or	r24, r25
  da:	85 b9       	out	0x05, r24	; 5
  dc:	08 95       	ret
		case 'C': DDRC &= ~(1<<(pin)); PORTC |= (1<<(pin)); break;
  de:	27 b1       	in	r18, 0x07	; 7
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	02 c0       	rjmp	.+4      	; 0xea <_ZN6Button4InitEci+0x40>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	4a 95       	dec	r20
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <_ZN6Button4InitEci+0x3c>
  ee:	98 2f       	mov	r25, r24
  f0:	90 95       	com	r25
  f2:	92 23       	and	r25, r18
  f4:	97 b9       	out	0x07, r25	; 7
  f6:	98 b1       	in	r25, 0x08	; 8
  f8:	89 2b       	or	r24, r25
  fa:	88 b9       	out	0x08, r24	; 8
  fc:	08 95       	ret
		case 'D': DDRD &= ~(1<<(pin)); PORTD |= (1<<(pin)); break;
  fe:	2a b1       	in	r18, 0x0a	; 10
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	02 c0       	rjmp	.+4      	; 0x10a <_ZN6Button4InitEci+0x60>
 106:	88 0f       	add	r24, r24
 108:	99 1f       	adc	r25, r25
 10a:	4a 95       	dec	r20
 10c:	e2 f7       	brpl	.-8      	; 0x106 <_ZN6Button4InitEci+0x5c>
 10e:	98 2f       	mov	r25, r24
 110:	90 95       	com	r25
 112:	92 23       	and	r25, r18
 114:	9a b9       	out	0x0a, r25	; 10
 116:	9b b1       	in	r25, 0x0b	; 11
 118:	89 2b       	or	r24, r25
 11a:	8b b9       	out	0x0b, r24	; 11
 11c:	08 95       	ret

0000011e <_ZN6Button7PressedEi>:
	}
	
}

bool Button::Pressed(int debounce){
 11e:	fc 01       	movw	r30, r24
	//debounce защита от дребезга
	bool read_pin;
	if (debounce >= 0){
 120:	77 23       	and	r23, r23
 122:	54 f1       	brlt	.+84     	; 0x178 <_ZN6Button7PressedEi+0x5a>
		switch (_port){
 124:	90 81       	ld	r25, Z
 126:	93 34       	cpi	r25, 0x43	; 67
 128:	79 f0       	breq	.+30     	; 0x148 <_ZN6Button7PressedEi+0x2a>
 12a:	94 34       	cpi	r25, 0x44	; 68
 12c:	c1 f0       	breq	.+48     	; 0x15e <_ZN6Button7PressedEi+0x40>
 12e:	92 34       	cpi	r25, 0x42	; 66
 130:	29 f5       	brne	.+74     	; 0x17c <_ZN6Button7PressedEi+0x5e>
			case 'B': read_pin = ((1 << _pin) & PINB); break;
 132:	23 b1       	in	r18, 0x03	; 3
 134:	30 e0       	ldi	r19, 0x00	; 0
 136:	c9 01       	movw	r24, r18
 138:	01 80       	ldd	r0, Z+1	; 0x01
 13a:	02 c0       	rjmp	.+4      	; 0x140 <_ZN6Button7PressedEi+0x22>
 13c:	95 95       	asr	r25
 13e:	87 95       	ror	r24
 140:	0a 94       	dec	r0
 142:	e2 f7       	brpl	.-8      	; 0x13c <_ZN6Button7PressedEi+0x1e>
 144:	81 70       	andi	r24, 0x01	; 1
 146:	15 c0       	rjmp	.+42     	; 0x172 <_ZN6Button7PressedEi+0x54>
			case 'C': read_pin = ((1 << _pin) & PINC); break;
 148:	26 b1       	in	r18, 0x06	; 6
 14a:	30 e0       	ldi	r19, 0x00	; 0
 14c:	c9 01       	movw	r24, r18
 14e:	01 80       	ldd	r0, Z+1	; 0x01
 150:	02 c0       	rjmp	.+4      	; 0x156 <_ZN6Button7PressedEi+0x38>
 152:	95 95       	asr	r25
 154:	87 95       	ror	r24
 156:	0a 94       	dec	r0
 158:	e2 f7       	brpl	.-8      	; 0x152 <_ZN6Button7PressedEi+0x34>
 15a:	81 70       	andi	r24, 0x01	; 1
 15c:	0a c0       	rjmp	.+20     	; 0x172 <_ZN6Button7PressedEi+0x54>
			case 'D': read_pin = ((1 << _pin) & PIND); break;
 15e:	29 b1       	in	r18, 0x09	; 9
 160:	30 e0       	ldi	r19, 0x00	; 0
 162:	c9 01       	movw	r24, r18
 164:	01 80       	ldd	r0, Z+1	; 0x01
 166:	02 c0       	rjmp	.+4      	; 0x16c <_ZN6Button7PressedEi+0x4e>
 168:	95 95       	asr	r25
 16a:	87 95       	ror	r24
 16c:	0a 94       	dec	r0
 16e:	e2 f7       	brpl	.-8      	; 0x168 <_ZN6Button7PressedEi+0x4a>
 170:	81 70       	andi	r24, 0x01	; 1
			default: return false;
		}
		
		if (read_pin){
 172:	91 e0       	ldi	r25, 0x01	; 1
 174:	89 27       	eor	r24, r25
 176:	08 95       	ret
			}else{
			debounce--;
		};
	};
	
	return true;
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	08 95       	ret
	if (debounce >= 0){
		switch (_port){
			case 'B': read_pin = ((1 << _pin) & PINB); break;
			case 'C': read_pin = ((1 << _pin) & PINC); break;
			case 'D': read_pin = ((1 << _pin) & PIND); break;
			default: return false;
 17c:	80 e0       	ldi	r24, 0x00	; 0
		};
	};
	
	return true;
	
}
 17e:	08 95       	ret

00000180 <_Z10test_panel5Panel6Output>:
		}else{
		out.Set(false);
	};
};

void test_panel(Panel panel, Output out){
 180:	af 92       	push	r10
 182:	bf 92       	push	r11
 184:	cf 92       	push	r12
 186:	df 92       	push	r13
 188:	ef 92       	push	r14
 18a:	ff 92       	push	r15
 18c:	0f 93       	push	r16
 18e:	1f 93       	push	r17
 190:	cf 93       	push	r28
 192:	df 93       	push	r29
 194:	cd b7       	in	r28, 0x3d	; 61
 196:	de b7       	in	r29, 0x3e	; 62
 198:	2f 97       	sbiw	r28, 0x0f	; 15
 19a:	0f b6       	in	r0, 0x3f	; 63
 19c:	f8 94       	cli
 19e:	de bf       	out	0x3e, r29	; 62
 1a0:	0f be       	out	0x3f, r0	; 63
 1a2:	cd bf       	out	0x3d, r28	; 61
 1a4:	a9 82       	std	Y+1, r10	; 0x01
 1a6:	ba 82       	std	Y+2, r11	; 0x02
 1a8:	cb 82       	std	Y+3, r12	; 0x03
 1aa:	dc 82       	std	Y+4, r13	; 0x04
 1ac:	ed 82       	std	Y+5, r14	; 0x05
 1ae:	fe 82       	std	Y+6, r15	; 0x06
 1b0:	0f 83       	std	Y+7, r16	; 0x07
 1b2:	18 87       	std	Y+8, r17	; 0x08
 1b4:	29 87       	std	Y+9, r18	; 0x09
 1b6:	3a 87       	std	Y+10, r19	; 0x0a
 1b8:	4b 87       	std	Y+11, r20	; 0x0b
 1ba:	5c 87       	std	Y+12, r21	; 0x0c
 1bc:	6d 87       	std	Y+13, r22	; 0x0d
 1be:	7e 87       	std	Y+14, r23	; 0x0e
 1c0:	8f 87       	std	Y+15, r24	; 0x0f
	char Pressed_btn = 'N';
	Pressed_btn = panel.Pressed(10);
 1c2:	6a e0       	ldi	r22, 0x0A	; 10
 1c4:	70 e0       	ldi	r23, 0x00	; 0
 1c6:	ce 01       	movw	r24, r28
 1c8:	01 96       	adiw	r24, 0x01	; 1
 1ca:	0e 94 c0 02 	call	0x580	; 0x580 <_ZN5Panel7PressedEi>
	
	if (Pressed_btn == 'R'){
 1ce:	82 35       	cpi	r24, 0x52	; 82
 1d0:	a1 f4       	brne	.+40     	; 0x1fa <_Z10test_panel5Panel6Output+0x7a>
		out.SetOnTime(true,10);
 1d2:	4a e0       	ldi	r20, 0x0A	; 10
 1d4:	50 e0       	ldi	r21, 0x00	; 0
 1d6:	61 e0       	ldi	r22, 0x01	; 1
 1d8:	ce 01       	movw	r24, r28
 1da:	4c 96       	adiw	r24, 0x1c	; 28
 1dc:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <_ZN6Output9SetOnTimeEbi>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1e0:	8f e3       	ldi	r24, 0x3F	; 63
 1e2:	9c e9       	ldi	r25, 0x9C	; 156
 1e4:	01 97       	sbiw	r24, 0x01	; 1
 1e6:	f1 f7       	brne	.-4      	; 0x1e4 <_Z10test_panel5Panel6Output+0x64>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <_Z10test_panel5Panel6Output+0x6a>
 1ea:	00 00       	nop
		_delay_ms(10);
		out.SetOnTime(true,10);
 1ec:	4a e0       	ldi	r20, 0x0A	; 10
 1ee:	50 e0       	ldi	r21, 0x00	; 0
 1f0:	61 e0       	ldi	r22, 0x01	; 1
 1f2:	ce 01       	movw	r24, r28
 1f4:	4c 96       	adiw	r24, 0x1c	; 28
 1f6:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <_ZN6Output9SetOnTimeEbi>
	}
}
 1fa:	2f 96       	adiw	r28, 0x0f	; 15
 1fc:	0f b6       	in	r0, 0x3f	; 63
 1fe:	f8 94       	cli
 200:	de bf       	out	0x3e, r29	; 62
 202:	0f be       	out	0x3f, r0	; 63
 204:	cd bf       	out	0x3d, r28	; 61
 206:	df 91       	pop	r29
 208:	cf 91       	pop	r28
 20a:	1f 91       	pop	r17
 20c:	0f 91       	pop	r16
 20e:	ff 90       	pop	r15
 210:	ef 90       	pop	r14
 212:	df 90       	pop	r13
 214:	cf 90       	pop	r12
 216:	bf 90       	pop	r11
 218:	af 90       	pop	r10
 21a:	08 95       	ret

0000021c <_Z14Initialisationv>:
Panel panel;

Output suppot_1;


void Initialisation(){
 21c:	8f 92       	push	r8
 21e:	9f 92       	push	r9
 220:	af 92       	push	r10
 222:	cf 92       	push	r12
 224:	df 92       	push	r13
 226:	ef 92       	push	r14
 228:	0f 93       	push	r16
 22a:	1f 93       	push	r17
	
	DDRB = 0xFF;
 22c:	8f ef       	ldi	r24, 0xFF	; 255
 22e:	84 b9       	out	0x04, r24	; 4
	DDRD = 0xFF;
 230:	8a b9       	out	0x0a, r24	; 10
	
	okButton.Init('B', 0);
 232:	40 e0       	ldi	r20, 0x00	; 0
 234:	50 e0       	ldi	r21, 0x00	; 0
 236:	62 e4       	ldi	r22, 0x42	; 66
 238:	8e e1       	ldi	r24, 0x1E	; 30
 23a:	91 e0       	ldi	r25, 0x01	; 1
 23c:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN6Button4InitEci>
	upButton.Init('B', 1);
 240:	41 e0       	ldi	r20, 0x01	; 1
 242:	50 e0       	ldi	r21, 0x00	; 0
 244:	62 e4       	ldi	r22, 0x42	; 66
 246:	8b e1       	ldi	r24, 0x1B	; 27
 248:	91 e0       	ldi	r25, 0x01	; 1
 24a:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN6Button4InitEci>
	downButton.Init('B', 2);
 24e:	42 e0       	ldi	r20, 0x02	; 2
 250:	50 e0       	ldi	r21, 0x00	; 0
 252:	62 e4       	ldi	r22, 0x42	; 66
 254:	88 e1       	ldi	r24, 0x18	; 24
 256:	91 e0       	ldi	r25, 0x01	; 1
 258:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN6Button4InitEci>
	leftButton.Init('B',3);
 25c:	43 e0       	ldi	r20, 0x03	; 3
 25e:	50 e0       	ldi	r21, 0x00	; 0
 260:	62 e4       	ldi	r22, 0x42	; 66
 262:	85 e1       	ldi	r24, 0x15	; 21
 264:	91 e0       	ldi	r25, 0x01	; 1
 266:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN6Button4InitEci>
	rightButton.Init('B',4);
 26a:	44 e0       	ldi	r20, 0x04	; 4
 26c:	50 e0       	ldi	r21, 0x00	; 0
 26e:	62 e4       	ldi	r22, 0x42	; 66
 270:	82 e1       	ldi	r24, 0x12	; 18
 272:	91 e0       	ldi	r25, 0x01	; 1
 274:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN6Button4InitEci>
	
	panel.Init(okButton,upButton,downButton,leftButton,rightButton);
 278:	80 90 15 01 	lds	r8, 0x0115	; 0x800115 <leftButton>
 27c:	90 90 16 01 	lds	r9, 0x0116	; 0x800116 <leftButton+0x1>
 280:	a0 90 17 01 	lds	r10, 0x0117	; 0x800117 <leftButton+0x2>
 284:	c0 90 18 01 	lds	r12, 0x0118	; 0x800118 <downButton>
 288:	d0 90 19 01 	lds	r13, 0x0119	; 0x800119 <downButton+0x1>
 28c:	e0 90 1a 01 	lds	r14, 0x011A	; 0x80011a <downButton+0x2>
 290:	00 91 1b 01 	lds	r16, 0x011B	; 0x80011b <upButton>
 294:	10 91 1c 01 	lds	r17, 0x011C	; 0x80011c <upButton+0x1>
 298:	20 91 1d 01 	lds	r18, 0x011D	; 0x80011d <upButton+0x2>
 29c:	40 91 1e 01 	lds	r20, 0x011E	; 0x80011e <okButton>
 2a0:	50 91 1f 01 	lds	r21, 0x011F	; 0x80011f <okButton+0x1>
 2a4:	60 91 20 01 	lds	r22, 0x0120	; 0x800120 <okButton+0x2>
 2a8:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <rightButton+0x2>
 2ac:	8f 93       	push	r24
 2ae:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <rightButton+0x1>
 2b2:	8f 93       	push	r24
 2b4:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <rightButton>
 2b8:	8f 93       	push	r24
 2ba:	83 e0       	ldi	r24, 0x03	; 3
 2bc:	91 e0       	ldi	r25, 0x01	; 1
 2be:	0e 94 96 02 	call	0x52c	; 0x52c <_ZN5Panel4InitE6ButtonS0_S0_S0_S0_>
	
	suppot_1.Init('D', 1);
 2c2:	41 e0       	ldi	r20, 0x01	; 1
 2c4:	50 e0       	ldi	r21, 0x00	; 0
 2c6:	64 e4       	ldi	r22, 0x44	; 68
 2c8:	80 e0       	ldi	r24, 0x00	; 0
 2ca:	91 e0       	ldi	r25, 0x01	; 1
 2cc:	0e 94 c1 01 	call	0x382	; 0x382 <_ZN6Output4InitEci>
	
}
 2d0:	0f 90       	pop	r0
 2d2:	0f 90       	pop	r0
 2d4:	0f 90       	pop	r0
 2d6:	1f 91       	pop	r17
 2d8:	0f 91       	pop	r16
 2da:	ef 90       	pop	r14
 2dc:	df 90       	pop	r13
 2de:	cf 90       	pop	r12
 2e0:	af 90       	pop	r10
 2e2:	9f 90       	pop	r9
 2e4:	8f 90       	pop	r8
 2e6:	08 95       	ret

000002e8 <main>:



int main(void)
{	
	Initialisation();
 2e8:	0e 94 0e 01 	call	0x21c	; 0x21c <_Z14Initialisationv>
    while (1) 
    {
		
		//test_out_timer(rightButton,suppot_1);
		//test_Out_Set(downButton,suppot_1);
		test_panel(panel,suppot_1);
 2ec:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
 2f0:	8f 93       	push	r24
 2f2:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <_edata+0x1>
 2f6:	8f 93       	push	r24
 2f8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 2fc:	8f 93       	push	r24
 2fe:	a0 90 03 01 	lds	r10, 0x0103	; 0x800103 <panel>
 302:	b0 90 04 01 	lds	r11, 0x0104	; 0x800104 <panel+0x1>
 306:	c0 90 05 01 	lds	r12, 0x0105	; 0x800105 <panel+0x2>
 30a:	d0 90 06 01 	lds	r13, 0x0106	; 0x800106 <panel+0x3>
 30e:	e0 90 07 01 	lds	r14, 0x0107	; 0x800107 <panel+0x4>
 312:	f0 90 08 01 	lds	r15, 0x0108	; 0x800108 <panel+0x5>
 316:	00 91 09 01 	lds	r16, 0x0109	; 0x800109 <panel+0x6>
 31a:	10 91 0a 01 	lds	r17, 0x010A	; 0x80010a <panel+0x7>
 31e:	20 91 0b 01 	lds	r18, 0x010B	; 0x80010b <panel+0x8>
 322:	30 91 0c 01 	lds	r19, 0x010C	; 0x80010c <panel+0x9>
 326:	40 91 0d 01 	lds	r20, 0x010D	; 0x80010d <panel+0xa>
 32a:	50 91 0e 01 	lds	r21, 0x010E	; 0x80010e <panel+0xb>
 32e:	60 91 0f 01 	lds	r22, 0x010F	; 0x80010f <panel+0xc>
 332:	70 91 10 01 	lds	r23, 0x0110	; 0x800110 <panel+0xd>
 336:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <panel+0xe>
 33a:	0e 94 c0 00 	call	0x180	; 0x180 <_Z10test_panel5Panel6Output>
 33e:	0f 90       	pop	r0
 340:	0f 90       	pop	r0
 342:	0f 90       	pop	r0
 344:	d3 cf       	rjmp	.-90     	; 0x2ec <main+0x4>

00000346 <_GLOBAL__sub_I__Z14test_out_timer6Button6Output>:


#ifndef INITIALISATION_H_
#define INITIALISATION_H_

Button okButton;
 346:	8e e1       	ldi	r24, 0x1E	; 30
 348:	91 e0       	ldi	r25, 0x01	; 1
 34a:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN6ButtonC1Ev>
Button upButton;
 34e:	8b e1       	ldi	r24, 0x1B	; 27
 350:	91 e0       	ldi	r25, 0x01	; 1
 352:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN6ButtonC1Ev>
Button downButton;
 356:	88 e1       	ldi	r24, 0x18	; 24
 358:	91 e0       	ldi	r25, 0x01	; 1
 35a:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN6ButtonC1Ev>
Button leftButton;
 35e:	85 e1       	ldi	r24, 0x15	; 21
 360:	91 e0       	ldi	r25, 0x01	; 1
 362:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN6ButtonC1Ev>
Button rightButton;
 366:	82 e1       	ldi	r24, 0x12	; 18
 368:	91 e0       	ldi	r25, 0x01	; 1
 36a:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN6ButtonC1Ev>

Panel panel;
 36e:	83 e0       	ldi	r24, 0x03	; 3
 370:	91 e0       	ldi	r25, 0x01	; 1
 372:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_ZN5PanelC1Ev>

Output suppot_1;
 376:	80 e0       	ldi	r24, 0x00	; 0
 378:	91 e0       	ldi	r25, 0x01	; 1
 37a:	0e 94 c0 01 	call	0x380	; 0x380 <_ZN6OutputC1Ev>
 37e:	08 95       	ret

00000380 <_ZN6OutputC1Ev>:
#include <avr/io.h>
#include <util/delay.h>


// default constructor
Output::Output()
 380:	08 95       	ret

00000382 <_ZN6Output4InitEci>:
{
} //Out

void Output::Init(char port, int pin){
 382:	fc 01       	movw	r30, r24
	_port = port;
 384:	60 83       	st	Z, r22
	_pin = pin;
 386:	41 83       	std	Z+1, r20	; 0x01
 388:	52 83       	std	Z+2, r21	; 0x02
	
	switch (_port){
 38a:	63 34       	cpi	r22, 0x43	; 67
 38c:	79 f0       	breq	.+30     	; 0x3ac <_ZN6Output4InitEci+0x2a>
 38e:	64 34       	cpi	r22, 0x44	; 68
 390:	c1 f0       	breq	.+48     	; 0x3c2 <_ZN6Output4InitEci+0x40>
 392:	62 34       	cpi	r22, 0x42	; 66
 394:	01 f5       	brne	.+64     	; 0x3d6 <_ZN6Output4InitEci+0x54>
		case 'B': DDRB |= (1<<(pin)); break;
 396:	24 b1       	in	r18, 0x04	; 4
 398:	81 e0       	ldi	r24, 0x01	; 1
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	02 c0       	rjmp	.+4      	; 0x3a2 <_ZN6Output4InitEci+0x20>
 39e:	88 0f       	add	r24, r24
 3a0:	99 1f       	adc	r25, r25
 3a2:	4a 95       	dec	r20
 3a4:	e2 f7       	brpl	.-8      	; 0x39e <_ZN6Output4InitEci+0x1c>
 3a6:	82 2b       	or	r24, r18
 3a8:	84 b9       	out	0x04, r24	; 4
 3aa:	08 95       	ret
		case 'C': DDRC |= (1<<(pin)); break;
 3ac:	27 b1       	in	r18, 0x07	; 7
 3ae:	81 e0       	ldi	r24, 0x01	; 1
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	02 c0       	rjmp	.+4      	; 0x3b8 <_ZN6Output4InitEci+0x36>
 3b4:	88 0f       	add	r24, r24
 3b6:	99 1f       	adc	r25, r25
 3b8:	4a 95       	dec	r20
 3ba:	e2 f7       	brpl	.-8      	; 0x3b4 <_ZN6Output4InitEci+0x32>
 3bc:	82 2b       	or	r24, r18
 3be:	87 b9       	out	0x07, r24	; 7
 3c0:	08 95       	ret
		case 'D': DDRD |= (1<<(pin)); break;
 3c2:	2a b1       	in	r18, 0x0a	; 10
 3c4:	81 e0       	ldi	r24, 0x01	; 1
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	02 c0       	rjmp	.+4      	; 0x3ce <_ZN6Output4InitEci+0x4c>
 3ca:	88 0f       	add	r24, r24
 3cc:	99 1f       	adc	r25, r25
 3ce:	4a 95       	dec	r20
 3d0:	e2 f7       	brpl	.-8      	; 0x3ca <_ZN6Output4InitEci+0x48>
 3d2:	82 2b       	or	r24, r18
 3d4:	8a b9       	out	0x0a, r24	; 10
 3d6:	08 95       	ret

000003d8 <_ZN6Output3SetEb>:
	}
} 

void Output::Set(bool level){
	if (level){
 3d8:	66 23       	and	r22, r22
 3da:	a9 f1       	breq	.+106    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
		switch (_port){
 3dc:	fc 01       	movw	r30, r24
 3de:	20 81       	ld	r18, Z
 3e0:	23 34       	cpi	r18, 0x43	; 67
 3e2:	99 f0       	breq	.+38     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3e4:	24 34       	cpi	r18, 0x44	; 68
 3e6:	01 f1       	breq	.+64     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 3e8:	22 34       	cpi	r18, 0x42	; 66
 3ea:	09 f0       	breq	.+2      	; 0x3ee <_ZN6Output3SetEb+0x16>
 3ec:	62 c0       	rjmp	.+196    	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
			case 'B': PORTB |= (1<<(_pin)); break;
 3ee:	45 b1       	in	r20, 0x05	; 5
 3f0:	21 e0       	ldi	r18, 0x01	; 1
 3f2:	30 e0       	ldi	r19, 0x00	; 0
 3f4:	b9 01       	movw	r22, r18
 3f6:	01 80       	ldd	r0, Z+1	; 0x01
 3f8:	02 c0       	rjmp	.+4      	; 0x3fe <_ZN6Output3SetEb+0x26>
 3fa:	66 0f       	add	r22, r22
 3fc:	77 1f       	adc	r23, r23
 3fe:	0a 94       	dec	r0
 400:	e2 f7       	brpl	.-8      	; 0x3fa <_ZN6Output3SetEb+0x22>
 402:	cb 01       	movw	r24, r22
 404:	84 2b       	or	r24, r20
 406:	85 b9       	out	0x05, r24	; 5
 408:	08 95       	ret
			case 'C': PORTC |= (1<<(_pin));break;
 40a:	48 b1       	in	r20, 0x08	; 8
 40c:	21 e0       	ldi	r18, 0x01	; 1
 40e:	30 e0       	ldi	r19, 0x00	; 0
 410:	b9 01       	movw	r22, r18
 412:	fc 01       	movw	r30, r24
 414:	01 80       	ldd	r0, Z+1	; 0x01
 416:	02 c0       	rjmp	.+4      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 418:	66 0f       	add	r22, r22
 41a:	77 1f       	adc	r23, r23
 41c:	0a 94       	dec	r0
 41e:	e2 f7       	brpl	.-8      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 420:	cb 01       	movw	r24, r22
 422:	84 2b       	or	r24, r20
 424:	88 b9       	out	0x08, r24	; 8
 426:	08 95       	ret
			case 'D': PORTD |= (1<<(_pin));break;
 428:	4b b1       	in	r20, 0x0b	; 11
 42a:	21 e0       	ldi	r18, 0x01	; 1
 42c:	30 e0       	ldi	r19, 0x00	; 0
 42e:	b9 01       	movw	r22, r18
 430:	fc 01       	movw	r30, r24
 432:	01 80       	ldd	r0, Z+1	; 0x01
 434:	02 c0       	rjmp	.+4      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 436:	66 0f       	add	r22, r22
 438:	77 1f       	adc	r23, r23
 43a:	0a 94       	dec	r0
 43c:	e2 f7       	brpl	.-8      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 43e:	cb 01       	movw	r24, r22
 440:	84 2b       	or	r24, r20
 442:	8b b9       	out	0x0b, r24	; 11
 444:	08 95       	ret
		}
	}else{
		switch (_port){
 446:	fc 01       	movw	r30, r24
 448:	20 81       	ld	r18, Z
 44a:	23 34       	cpi	r18, 0x43	; 67
 44c:	99 f0       	breq	.+38     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 44e:	24 34       	cpi	r18, 0x44	; 68
 450:	09 f1       	breq	.+66     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 452:	22 34       	cpi	r18, 0x42	; 66
 454:	71 f5       	brne	.+92     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
			case 'B': PORTB &= ~(1<<(_pin)); break;
 456:	45 b1       	in	r20, 0x05	; 5
 458:	21 e0       	ldi	r18, 0x01	; 1
 45a:	30 e0       	ldi	r19, 0x00	; 0
 45c:	b9 01       	movw	r22, r18
 45e:	01 80       	ldd	r0, Z+1	; 0x01
 460:	02 c0       	rjmp	.+4      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 462:	66 0f       	add	r22, r22
 464:	77 1f       	adc	r23, r23
 466:	0a 94       	dec	r0
 468:	e2 f7       	brpl	.-8      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 46a:	cb 01       	movw	r24, r22
 46c:	80 95       	com	r24
 46e:	84 23       	and	r24, r20
 470:	85 b9       	out	0x05, r24	; 5
 472:	08 95       	ret
			case 'C': PORTC &= ~(1<<(_pin)); break;
 474:	48 b1       	in	r20, 0x08	; 8
 476:	21 e0       	ldi	r18, 0x01	; 1
 478:	30 e0       	ldi	r19, 0x00	; 0
 47a:	b9 01       	movw	r22, r18
 47c:	fc 01       	movw	r30, r24
 47e:	01 80       	ldd	r0, Z+1	; 0x01
 480:	02 c0       	rjmp	.+4      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 482:	66 0f       	add	r22, r22
 484:	77 1f       	adc	r23, r23
 486:	0a 94       	dec	r0
 488:	e2 f7       	brpl	.-8      	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 48a:	cb 01       	movw	r24, r22
 48c:	80 95       	com	r24
 48e:	84 23       	and	r24, r20
 490:	88 b9       	out	0x08, r24	; 8
 492:	08 95       	ret
			case 'D': PORTD &= ~(1<<(_pin)); break;
 494:	4b b1       	in	r20, 0x0b	; 11
 496:	21 e0       	ldi	r18, 0x01	; 1
 498:	30 e0       	ldi	r19, 0x00	; 0
 49a:	b9 01       	movw	r22, r18
 49c:	fc 01       	movw	r30, r24
 49e:	01 80       	ldd	r0, Z+1	; 0x01
 4a0:	02 c0       	rjmp	.+4      	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 4a2:	66 0f       	add	r22, r22
 4a4:	77 1f       	adc	r23, r23
 4a6:	0a 94       	dec	r0
 4a8:	e2 f7       	brpl	.-8      	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 4aa:	cb 01       	movw	r24, r22
 4ac:	80 95       	com	r24
 4ae:	84 23       	and	r24, r20
 4b0:	8b b9       	out	0x0b, r24	; 11
 4b2:	08 95       	ret

000004b4 <_ZN6Output9SetOnTimeEbi>:
		}
	}

}

void Output::SetOnTime(bool level, int t){
 4b4:	ff 92       	push	r15
 4b6:	0f 93       	push	r16
 4b8:	1f 93       	push	r17
 4ba:	cf 93       	push	r28
 4bc:	df 93       	push	r29
 4be:	8c 01       	movw	r16, r24
 4c0:	f6 2e       	mov	r15, r22
 4c2:	ea 01       	movw	r28, r20
	(*this).Set(level);
 4c4:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <_ZN6Output3SetEb>
	for (int i=0;i<t;i++){
 4c8:	1c 16       	cp	r1, r28
 4ca:	1d 06       	cpc	r1, r29
 4cc:	64 f4       	brge	.+24     	; 0x4e6 <_ZN6Output9SetOnTimeEbi+0x32>
 4ce:	80 e0       	ldi	r24, 0x00	; 0
 4d0:	90 e0       	ldi	r25, 0x00	; 0
 4d2:	ef e9       	ldi	r30, 0x9F	; 159
 4d4:	ff e0       	ldi	r31, 0x0F	; 15
 4d6:	31 97       	sbiw	r30, 0x01	; 1
 4d8:	f1 f7       	brne	.-4      	; 0x4d6 <_ZN6Output9SetOnTimeEbi+0x22>
 4da:	00 c0       	rjmp	.+0      	; 0x4dc <_ZN6Output9SetOnTimeEbi+0x28>
 4dc:	00 00       	nop
 4de:	01 96       	adiw	r24, 0x01	; 1
 4e0:	c8 17       	cp	r28, r24
 4e2:	d9 07       	cpc	r29, r25
 4e4:	b1 f7       	brne	.-20     	; 0x4d2 <_ZN6Output9SetOnTimeEbi+0x1e>
		_delay_ms(1);
	};
	(*this).Set(!level);
 4e6:	61 e0       	ldi	r22, 0x01	; 1
 4e8:	6f 25       	eor	r22, r15
 4ea:	c8 01       	movw	r24, r16
 4ec:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <_ZN6Output3SetEb>
}
 4f0:	df 91       	pop	r29
 4f2:	cf 91       	pop	r28
 4f4:	1f 91       	pop	r17
 4f6:	0f 91       	pop	r16
 4f8:	ff 90       	pop	r15
 4fa:	08 95       	ret

000004fc <_ZN5PanelC1Ev>:


#include "Panel.h"

// default constructor
Panel::Panel()
 4fc:	cf 93       	push	r28
 4fe:	df 93       	push	r29
 500:	ec 01       	movw	r28, r24
 502:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN6ButtonC1Ev>
 506:	ce 01       	movw	r24, r28
 508:	03 96       	adiw	r24, 0x03	; 3
 50a:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN6ButtonC1Ev>
 50e:	ce 01       	movw	r24, r28
 510:	06 96       	adiw	r24, 0x06	; 6
 512:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN6ButtonC1Ev>
 516:	ce 01       	movw	r24, r28
 518:	09 96       	adiw	r24, 0x09	; 9
 51a:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN6ButtonC1Ev>
 51e:	ce 01       	movw	r24, r28
 520:	0c 96       	adiw	r24, 0x0c	; 12
 522:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN6ButtonC1Ev>
{
} 
 526:	df 91       	pop	r29
 528:	cf 91       	pop	r28
 52a:	08 95       	ret

0000052c <_ZN5Panel4InitE6ButtonS0_S0_S0_S0_>:

void Panel::Init(Button ok, Button up, Button down, Button left, Button rigit ){
 52c:	8f 92       	push	r8
 52e:	9f 92       	push	r9
 530:	af 92       	push	r10
 532:	cf 92       	push	r12
 534:	df 92       	push	r13
 536:	ef 92       	push	r14
 538:	0f 93       	push	r16
 53a:	1f 93       	push	r17
 53c:	cf 93       	push	r28
 53e:	df 93       	push	r29
 540:	cd b7       	in	r28, 0x3d	; 61
 542:	de b7       	in	r29, 0x3e	; 62
 544:	fc 01       	movw	r30, r24
	bat_ok = ok;
 546:	40 83       	st	Z, r20
 548:	51 83       	std	Z+1, r21	; 0x01
 54a:	62 83       	std	Z+2, r22	; 0x02
	bat_up = up;
 54c:	03 83       	std	Z+3, r16	; 0x03
 54e:	14 83       	std	Z+4, r17	; 0x04
 550:	25 83       	std	Z+5, r18	; 0x05
	bat_down = down;
 552:	c6 82       	std	Z+6, r12	; 0x06
 554:	d7 82       	std	Z+7, r13	; 0x07
 556:	e0 86       	std	Z+8, r14	; 0x08
	bat_right = rigit;
 558:	8d 85       	ldd	r24, Y+13	; 0x0d
 55a:	9e 85       	ldd	r25, Y+14	; 0x0e
 55c:	af 85       	ldd	r26, Y+15	; 0x0f
 55e:	84 87       	std	Z+12, r24	; 0x0c
 560:	95 87       	std	Z+13, r25	; 0x0d
 562:	a6 87       	std	Z+14, r26	; 0x0e
	bat_left = left;
 564:	81 86       	std	Z+9, r8	; 0x09
 566:	92 86       	std	Z+10, r9	; 0x0a
 568:	a3 86       	std	Z+11, r10	; 0x0b
}
 56a:	df 91       	pop	r29
 56c:	cf 91       	pop	r28
 56e:	1f 91       	pop	r17
 570:	0f 91       	pop	r16
 572:	ef 90       	pop	r14
 574:	df 90       	pop	r13
 576:	cf 90       	pop	r12
 578:	af 90       	pop	r10
 57a:	9f 90       	pop	r9
 57c:	8f 90       	pop	r8
 57e:	08 95       	ret

00000580 <_ZN5Panel7PressedEi>:

char Panel::Pressed(int debounse){
 580:	0f 93       	push	r16
 582:	1f 93       	push	r17
 584:	cf 93       	push	r28
 586:	df 93       	push	r29
 588:	ec 01       	movw	r28, r24
 58a:	8b 01       	movw	r16, r22
	if (bat_ok.Pressed(debounse)){ return 'O';}
 58c:	0e 94 8f 00 	call	0x11e	; 0x11e <_ZN6Button7PressedEi>
 590:	81 11       	cpse	r24, r1
 592:	1e c0       	rjmp	.+60     	; 0x5d0 <_ZN5Panel7PressedEi+0x50>
	if (bat_up.Pressed(debounse)){ return 'U';}
 594:	b8 01       	movw	r22, r16
 596:	ce 01       	movw	r24, r28
 598:	03 96       	adiw	r24, 0x03	; 3
 59a:	0e 94 8f 00 	call	0x11e	; 0x11e <_ZN6Button7PressedEi>
 59e:	81 11       	cpse	r24, r1
 5a0:	19 c0       	rjmp	.+50     	; 0x5d4 <_ZN5Panel7PressedEi+0x54>
	if (bat_down.Pressed(debounse)){ return 'D';}
 5a2:	b8 01       	movw	r22, r16
 5a4:	ce 01       	movw	r24, r28
 5a6:	06 96       	adiw	r24, 0x06	; 6
 5a8:	0e 94 8f 00 	call	0x11e	; 0x11e <_ZN6Button7PressedEi>
 5ac:	81 11       	cpse	r24, r1
 5ae:	14 c0       	rjmp	.+40     	; 0x5d8 <_ZN5Panel7PressedEi+0x58>
	if (bat_right.Pressed(debounse)){ return 'R';}
 5b0:	b8 01       	movw	r22, r16
 5b2:	ce 01       	movw	r24, r28
 5b4:	0c 96       	adiw	r24, 0x0c	; 12
 5b6:	0e 94 8f 00 	call	0x11e	; 0x11e <_ZN6Button7PressedEi>
 5ba:	81 11       	cpse	r24, r1
 5bc:	0f c0       	rjmp	.+30     	; 0x5dc <_ZN5Panel7PressedEi+0x5c>
	if (bat_left.Pressed(debounse)) {return 'L';}	
 5be:	b8 01       	movw	r22, r16
 5c0:	ce 01       	movw	r24, r28
 5c2:	09 96       	adiw	r24, 0x09	; 9
 5c4:	0e 94 8f 00 	call	0x11e	; 0x11e <_ZN6Button7PressedEi>
 5c8:	81 11       	cpse	r24, r1
 5ca:	0a c0       	rjmp	.+20     	; 0x5e0 <_ZN5Panel7PressedEi+0x60>
	return 'N';
 5cc:	8e e4       	ldi	r24, 0x4E	; 78
 5ce:	09 c0       	rjmp	.+18     	; 0x5e2 <_ZN5Panel7PressedEi+0x62>
	bat_right = rigit;
	bat_left = left;
}

char Panel::Pressed(int debounse){
	if (bat_ok.Pressed(debounse)){ return 'O';}
 5d0:	8f e4       	ldi	r24, 0x4F	; 79
 5d2:	07 c0       	rjmp	.+14     	; 0x5e2 <_ZN5Panel7PressedEi+0x62>
	if (bat_up.Pressed(debounse)){ return 'U';}
 5d4:	85 e5       	ldi	r24, 0x55	; 85
 5d6:	05 c0       	rjmp	.+10     	; 0x5e2 <_ZN5Panel7PressedEi+0x62>
	if (bat_down.Pressed(debounse)){ return 'D';}
 5d8:	84 e4       	ldi	r24, 0x44	; 68
 5da:	03 c0       	rjmp	.+6      	; 0x5e2 <_ZN5Panel7PressedEi+0x62>
	if (bat_right.Pressed(debounse)){ return 'R';}
 5dc:	82 e5       	ldi	r24, 0x52	; 82
 5de:	01 c0       	rjmp	.+2      	; 0x5e2 <_ZN5Panel7PressedEi+0x62>
	if (bat_left.Pressed(debounse)) {return 'L';}	
 5e0:	8c e4       	ldi	r24, 0x4C	; 76
	return 'N';
 5e2:	df 91       	pop	r29
 5e4:	cf 91       	pop	r28
 5e6:	1f 91       	pop	r17
 5e8:	0f 91       	pop	r16
 5ea:	08 95       	ret

000005ec <__tablejump2__>:
 5ec:	ee 0f       	add	r30, r30
 5ee:	ff 1f       	adc	r31, r31
 5f0:	05 90       	lpm	r0, Z+
 5f2:	f4 91       	lpm	r31, Z
 5f4:	e0 2d       	mov	r30, r0
 5f6:	09 94       	ijmp

000005f8 <_exit>:
 5f8:	f8 94       	cli

000005fa <__stop_program>:
 5fa:	ff cf       	rjmp	.-2      	; 0x5fa <__stop_program>
